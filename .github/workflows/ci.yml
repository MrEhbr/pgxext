name: Go
on:
  push:
    branches:
      - "**"
    tags:
      - v*
    paths:
      - "**.go"
      - ".goreleaser.yml"
      - ".golangci.yml"
      - ".dockerignore"
      - "Makefile"
      - "rules.mk"
      - "go.*"
      - ".github/workflows/go.yml"
  pull_request:
    paths:
      - "**.go"
      - ".goreleaser.yml"
      - ".golangci.yml"
      - ".dockerignore"
      - "Makefile"
      - "rules.mk"
      - "go.*"
      - ".github/workflows/go.yml"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - uses: extractions/setup-just@v1
      - name: Run linters
        run: just lint
  tests:
    needs: [lint]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: pwd
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      OS: ubuntu-latest
      PGXEXT_TEST_DATABASE_DSN: postgres://postgres:pwd@localhost:5432/postgres?sslmode=disable
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - uses: extractions/setup-just@v1
      # - name: Check go.mod and go.sum
      #   run: |
      #     go mod tidy -v
      #     git --no-pager diff go.mod go.sum
      #     git --no-pager diff --quiet go.mod go.sum
      - name: Run tests on Unix-like operating systems
        run: just test
